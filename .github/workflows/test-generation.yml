name: Test Content Generation

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: '테스트할 단계 선택'
        required: true
        default: 'all'
        type: choice
        options:
          - 'all'
          - 'keywords'
          - 'crawling'
          - 'generation'
      debug_mode:
        description: '디버그 모드 활성화'
        required: false
        default: false
        type: boolean

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GOOGLE_TRENDS_API_KEY: ${{ secrets.GOOGLE_TRENDS_API_KEY }}
  NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
  GNEWS_API_KEY: ${{ secrets.GNEWS_API_KEY }}
  REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
  REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
  NODE_ENV: development

jobs:
  test-generation:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 환경 설정  
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 의존성 설치
        run: npm ci --silent

      - name: 디버그 정보 출력
        if: ${{ inputs.debug_mode }}
        run: |
          echo "=== 디버그 모드 활성화 ==="
          echo "테스트 타입: ${{ inputs.test_type }}"
          echo "Node.js 버전: $(node --version)"
          echo "작업 디렉토리: $(pwd)"
          echo "파일 목록:"
          ls -la scripts/
          echo "환경변수 확인:"
          [ -n "$OPENAI_API_KEY" ] && echo "✅ OpenAI API 키 있음" || echo "❌ OpenAI API 키 없음"

      - name: 키워드 수집 테스트
        if: ${{ inputs.test_type == 'all' || inputs.test_type == 'keywords' }}
        run: |
          echo "🔍 키워드 수집 테스트 시작..."
          node scripts/collect-keywords-refactored.js
          
          if [ -f "config/keywords-today.json" ]; then
            echo "✅ 키워드 수집 성공"
            cat config/keywords-today.json | jq '.finalKeywords[0:3]' || true
          else
            echo "❌ 키워드 수집 실패"
          fi

      - name: 콘텐츠 크롤링 테스트
        if: ${{ inputs.test_type == 'all' || inputs.test_type == 'crawling' }}
        run: |
          echo "🕷️ 콘텐츠 크롤링 테스트 시작..."
          node scripts/crawl-content-refactored.js
          
          if [ -f "config/content-data.json" ]; then
            echo "✅ 크롤링 성공"
            cat config/content-data.json | jq '.crawlResults' || true
          else
            echo "❌ 크롤링 실패"
          fi

      - name: 포스트 생성 테스트
        if: ${{ inputs.test_type == 'all' || inputs.test_type == 'generation' }}
        run: |
          echo "✍️ 포스트 생성 테스트 시작..."
          node scripts/generate-post-refactored.js
          
          if [ -d "content/posts" ] && [ "$(ls -A content/posts)" ]; then
            echo "✅ 포스트 생성 성공"
            echo "생성된 파일:"
            ls -la content/posts/
          else
            echo "❌ 포스트 생성 실패"
          fi

      - name: 테스트 결과 요약
        if: always()
        run: |
          echo "
          ## 🧪 테스트 결과 요약
          
          **테스트 타입**: ${{ inputs.test_type }}
          **실행 시간**: $(date)
          **디버그 모드**: ${{ inputs.debug_mode }}
          
          **파일 현황**:
          - 키워드 파일: $([ -f 'config/keywords-today.json' ] && echo '✅' || echo '❌')
          - 콘텐츠 파일: $([ -f 'config/content-data.json' ] && echo '✅' || echo '❌')  
          - 생성된 포스트: $(ls content/posts/*.md 2>/dev/null | wc -l || echo '0')개
          
          **다음 단계**: 
          - 실제 API 키 설정 후 프로덕션 테스트
          - 워크플로우 스케줄링 활성화
          "

      - name: 테스트 아티팩트 업로드
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ inputs.test_type }}-${{ github.run_number }}
          path: |
            config/*.json
            content/posts/*.md
            *.log
          retention-days: 7